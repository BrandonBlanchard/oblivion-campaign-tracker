{"version":3,"sources":["data/oblivion.js","components/oblivion-tracker/campaign-tree-background.js","constants/colors.js","action-creators/index.js","components/oblivion-tracker/campaign-node.js","components/oblivion-tracker/campaign-layers/prologue-tier.js","components/oblivion-tracker/campaign-layers/v-layer.js","selectors/index.js","components/oblivion-tracker/campaign-path/index.js","components/oblivion-tracker/index.js","components/player-chooser/index.js","components/omen-draws/index.js","fetchers/player-data.js","components/tracker-container/index.js","constants/index.js","App.js","serviceWorker.js","reducers/index.js","store.js","index.js"],"names":["ALLIANCES","campaignTree","id","tier","win","loss","order","alliance","name","summary","campaignScenarioList","reduce","acc","campaignScenarioMap","keyBy","CampaignTreeBackground","props","width","height","stackedSpheresRadius","horizontalCenter","verticalCenter","x","y","radius","stroke","strokeWidth","sides","rotation","points","fill","setPlayers","players","type","CampaignNode","dispatch","tierDiamondY","diamondRadius","textStart","useEffect","setNodePosition","padding","text","align","fontSize","fontFamily","centerX","centerY","diamondDiameter","diamonds","origin","i","push","key","TierDiamonds","PrologueTier","nodes","map","VLayer","allNodes","sortBy","halfWidth","guardianBottom","corruptorBottom","node","arr","min","max","scalar","length","xMin","Math","xMax","yMin","xPosition","yPosition","nodePlotter","playerListSelector","state","playerData","all","selectedPlayerNameSelector","selected","selectedPlayerSelector","selectedName","get","filter","playerCard","getScenarioPath","outcomes","currentScenario","currentIndex","outcomeString","nextIndex","nextScenario","scenario","getNextNode","futureScenarios","CampaignPath","nodePositionsMap","player","pathColor","initialScenario","partialScenarioPath","linePath","positions","OblivionTracker","useDispatch","container","nodePositions","useSelector","nodeProperties","selectedPlayer","useState","setWidth","setHeight","nodeRadius","setNodeRadius","calculateSizeDI","current","w","clientWidth","calculateSize","window","addEventListener","removeEventListener","tierHeight","prologueNodes","tier2Through5","slice","BORDER_OFFSET","PlayerChooser","selectedPlayerName","options","value","label","getOptions","selectedOption","option","className","onChange","newSelection","OmenDraws","count","fetchPlayerData","url","a","decoder","TextDecoder","fetch","response","ok","reader","body","getReader","read","buffer","data","decode","decodePlayer","line","splitLine","split","allianceString","omen","val","cards","parseFloat","TrackerContainer","containerRef","useRef","draws","Promise","resolve","reject","lines","console","log","ref","App","Boolean","location","hostname","match","defaultState","setNodePositionReducer","action","oldNodePositions","assign","setPlayersReducer","setPlayerReducer","rootReducer","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","oblivionStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22fbfe97.chunk.js","sourcesContent":["import keyBy from 'lodash/keyBy';\r\n\r\nexport const ALLIANCES = {\r\n    GUARDIAN: 'Guardian',\r\n    CORRUPTOR: 'Corruptor',\r\n    BOTH: 'both'\r\n};\r\n\r\nexport const tierByRecordIndex = [0,0,0,1,2,3,4];\r\n\r\nexport const campaignTree = [\r\n    [\r\n        {\r\n            id: 0,\r\n            tier: 0,\r\n            win:[1],\r\n            loss: [1],\r\n            order: 0,\r\n            alliance: ALLIANCES.BOTH,\r\n            name: 'Doomed Patrol',\r\n            summary: 'page #'\r\n        },\r\n        {\r\n            id: 1,\r\n            tier: 0,\r\n            win: [2],\r\n            loss: [2],\r\n            order: 1,\r\n            alliance: ALLIANCES.BOTH,\r\n            name: 'Rising Tensions',\r\n            summary: 'page #'\r\n        },\r\n        {\r\n            id: 2,\r\n            tier: 0,\r\n            win:[3,4],\r\n            loss:[3,4],\r\n            order: 2,\r\n            alliance: ALLIANCES.BOTH,\r\n            name: 'Border War',\r\n            summary: 'page #'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 3,\r\n            tier: 1,\r\n            win: [5],\r\n            loss: [6],\r\n            order: 0,\r\n            alliance: ALLIANCES.GUARDIAN,\r\n            name: 'A War for Peace',\r\n            summary: 'page #'\r\n        },\r\n        {\r\n            id: 4,\r\n            tier: 1,\r\n            win: [10],\r\n            loss: [11],\r\n            order: 1,\r\n            alliance: ALLIANCES.CORRUPTOR,\r\n            name: 'Fueling the fire',\r\n            summary: 'page #'  \r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 5,\r\n            tier: 2,\r\n            win: [8],\r\n            loss: [9],\r\n            order: 0,\r\n            alliance: ALLIANCES.GUARDIAN,\r\n            name: 'Seeds of Hope',\r\n            summary: 'page #'\r\n        },\r\n        {\r\n            id: 6,\r\n            tier: 2,\r\n            win: [9],\r\n            loss: [7],\r\n            order: 1,\r\n            alliance: ALLIANCES.GUARDIAN,\r\n            name: 'The Sanguine Trail',\r\n            summary: 'page #'\r\n        },\r\n        {\r\n            id: 10,\r\n            tier: 2,\r\n            win: [12],\r\n            loss: [13],\r\n            order: 1,\r\n            alliance: ALLIANCES.CORRUPTOR,\r\n            name: 'Reckless Assault',\r\n            summary: 'page #'\r\n        },\r\n        {\r\n            id: 11,\r\n            tier: 2,\r\n            win: [13],\r\n            loss: [14],\r\n            order: 0,\r\n            alliance: ALLIANCES.CORRUPTOR,\r\n            name: 'Burial at Sea',\r\n            summary: 'page #'\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            id: 7,\r\n            tier: 3,\r\n            win: [666],\r\n            loss: [666],\r\n            order: 2,\r\n            alliance: ALLIANCES.GUARDIAN,\r\n            name: 'Dark Days',\r\n            summary: 'page #'\r\n        },\r\n        {\r\n            id: 8,\r\n            tier: 3,\r\n            win: [666],\r\n            loss: [666],\r\n            order: 0,\r\n            alliance: ALLIANCES.GUARDIAN,\r\n            name: 'Toward the light',\r\n            summary: 'page #'\r\n        }, \r\n        {\r\n            id: 9,\r\n            tier: 3,\r\n            win: [666],\r\n            loss: [666],\r\n            order: 1,\r\n            alliance: ALLIANCES.GUARDIAN,\r\n            name: 'Left Behind',\r\n            summary: 'page #'\r\n        },\r\n        {\r\n            id: 12,\r\n            tier: 3,\r\n            win: [666],\r\n            loss: [666],\r\n            order: 2,\r\n            alliance: ALLIANCES.CORRUPTOR,\r\n            name: 'The End is Nigh',\r\n            summary: 'page #'\r\n        },\r\n        {\r\n            id: 13,\r\n            tier: 3,\r\n            win: [666],\r\n            loss: [666],\r\n            order: 1,\r\n            alliance: ALLIANCES.CORRUPTOR,\r\n            name: 'Clouded Visions',\r\n            summary: 'page #'\r\n        }, \r\n        {\r\n            id: 14,\r\n            tier: 3,\r\n            win: [666],\r\n            loss: [666],\r\n            order: 0,\r\n            alliance: ALLIANCES.CORRUPTOR,\r\n            name: 'The Last Ride',\r\n            summary: 'page #'\r\n        }\r\n    ],\r\n    [\r\n        {\r\n            id: 666,\r\n            tier: 4,\r\n            win: [],\r\n            loss: [],\r\n            order: 0,\r\n            alliance: ALLIANCES.BOTH,\r\n            name: \"Gateway to Oblivion\",\r\n            summary: 'page 666'\r\n        }\r\n    ]\r\n];\r\n\r\nexport const campaignScenarioList = campaignTree.reduce((acc, tier) => [...acc, ...tier]);\r\n\r\nexport const campaignScenarioMap = keyBy(campaignScenarioList, ({id}) => id );","import React from 'react';\r\nimport {\r\n  Circle,\r\n  Layer,\r\n  RegularPolygon,\r\n  Line\r\n} from 'react-konva';\r\n\r\nimport {\r\n  INFERNAL_RED_DARK,\r\n  ARCANE_GREY,\r\n  BLACK\r\n} from './../../constants/colors';\r\n\r\nconst CampaignTreeBackground = props => {\r\n    const {\r\n      width,\r\n      height\r\n    } = props;\r\n    \r\n    const stackedSpheresRadius = height / 10;\r\n    const horizontalCenter = width / 2;\r\n    const verticalCenter = height / 2;\r\n    \r\n    return (\r\n      <>\r\n        <Layer name='background-layer'>\r\n\r\n            {/* Vertical Stack of 5 */}\r\n            <Circle x={horizontalCenter} y={stackedSpheresRadius} radius={stackedSpheresRadius} stroke={INFERNAL_RED_DARK} strokeWidth={1} />\r\n            <Circle x={horizontalCenter} y={stackedSpheresRadius * 3} radius={stackedSpheresRadius} stroke={INFERNAL_RED_DARK} strokeWidth={1} />\r\n            <Circle x={horizontalCenter} y={stackedSpheresRadius * 5} radius={stackedSpheresRadius} stroke={INFERNAL_RED_DARK} strokeWidth={1} />\r\n            <Circle x={horizontalCenter} y={stackedSpheresRadius * 7} radius={stackedSpheresRadius} stroke={INFERNAL_RED_DARK} strokeWidth={1} />\r\n            <Circle x={horizontalCenter} y={stackedSpheresRadius * 9} radius={stackedSpheresRadius} stroke={INFERNAL_RED_DARK} strokeWidth={1} />\r\n            {/* Middle Triangle */}\r\n            <RegularPolygon x={horizontalCenter} y={stackedSpheresRadius * 5 } sides={3} radius={stackedSpheresRadius} stroke={INFERNAL_RED_DARK} strokeWidth={1} rotation={180}/>\r\n            {/* Line with circle on top */}\r\n            <Line points={[horizontalCenter, stackedSpheresRadius * 4.5, horizontalCenter, stackedSpheresRadius * 3.5]} stroke={INFERNAL_RED_DARK} />\r\n            <Circle x={horizontalCenter} y={stackedSpheresRadius * 3.5} radius={10} stroke={INFERNAL_RED_DARK} strokeWidth={1} fill={BLACK} />\r\n            \r\n        </Layer>\r\n        <Layer>\r\n            {/* Medium Large Circle towards center */}\r\n            <Circle x={horizontalCenter} y={verticalCenter} radius={stackedSpheresRadius * 2} stroke={ARCANE_GREY} strokeWidth={1} />\r\n            {/* Large Circle towards center */}\r\n            <Circle x={horizontalCenter} y={verticalCenter - stackedSpheresRadius/2} radius={stackedSpheresRadius * 3.5} stroke={ARCANE_GREY} strokeWidth={1} />\r\n            {/* Huge Circle towards the top */}\r\n            <Circle x={horizontalCenter} y={stackedSpheresRadius * -2} radius={stackedSpheresRadius * 6} stroke={ARCANE_GREY} strokeWidth={1} />\r\n            {/* Huge Circle towards the bottom */}\r\n            <Circle x={horizontalCenter} y={stackedSpheresRadius * 12} radius={stackedSpheresRadius * 6} stroke={ARCANE_GREY} strokeWidth={1} />\r\n            \r\n            <RegularPolygon sides={4} radius={stackedSpheresRadius} x={horizontalCenter} y={stackedSpheresRadius * 6} stroke={ARCANE_GREY} />\r\n        </Layer>\r\n      </>  \r\n    );\r\n};\r\n\r\nexport default CampaignTreeBackground;","\r\nexport const BLACK = '#000';\r\nexport const WHITE = '#fff';\r\n\r\nexport const INFERNAL_RED_DARK = '#662423';\r\nexport const INFERNAL_RED = '#CC4441';\r\nexport const GUARDIAN_GOLD = '#ffd700';\r\nexport const ARCANE_GREY = '#343434';","export const SET_NODE_POSITION_ACTION_TYPE = 'SET_NODE';\r\nexport const SET_SELECTED_PLAYER = 'SET_SELECTED_PLAYER';\r\nexport const SET_PLAYERS = 'SET_PLAYERS';\r\n\r\nexport const setNodePosition = (id, x, y) => ({\r\n    type: SET_NODE_POSITION_ACTION_TYPE,\r\n    id,\r\n    x,\r\n    y\r\n});\r\n\r\nexport const setSelectedPlayer = player => ({\r\n   type: SET_SELECTED_PLAYER,\r\n   player\r\n});\r\n\r\nexport const setPlayers = players => ({\r\n    type: SET_PLAYERS,\r\n    players\r\n});","import React, { useEffect } from 'react';\r\n\r\nimport { setNodePosition } from '../../action-creators';\r\nimport { Circle, Text, Group, RegularPolygon } from \"react-konva\";\r\nimport { WHITE, BLACK } from '../../constants/colors';\r\n\r\nconst TierDiamonds = (tier, centerX, centerY, diamondRadius) => {\r\n    const diamondDiameter = diamondRadius * 2;\r\n    const diamonds = [];\r\n    const origin = centerX - diamondDiameter * tier / 2 + diamondRadius; \r\n    \r\n    for(let i = 0; i < tier; i += 1) {\r\n        const x = origin + i * (diamondDiameter + 2);\r\n        \r\n        diamonds.push(\r\n            <RegularPolygon key={`${x}-${centerY}`} x={x} y={centerY} radius={diamondRadius} sides={4} stroke={WHITE} fill={WHITE} strokeWidth={1}/>  \r\n        );\r\n    }\r\n    \r\n    return diamonds;\r\n};\r\n\r\nconst CampaignNode = props => {\r\n    const {\r\n        id,\r\n        tier,\r\n        name,\r\n        x,\r\n        y,\r\n        radius,\r\n        dispatch\r\n    } = props;\r\n\r\n    const tierDiamondY = radius - radius * .5;\r\n    const diamondRadius = radius / 16;\r\n    const textStart = {\r\n        x: -radius,\r\n        y: -radius * .8\r\n    };\r\n    \r\n    useEffect(() => {\r\n        dispatch(setNodePosition(id,x,y));\r\n    }, [x, y, id]);\r\n    \r\n    \r\n    return (\r\n        <Group x={x} y={y}>\r\n            <Circle x={0} y={0} radius={radius} stroke={WHITE} strokeWidth={1.5} fill={BLACK} />\r\n            <Text \r\n                x={textStart.x}\r\n                y={textStart.y}\r\n                width={radius * 2}\r\n                padding={8}\r\n                text={name}\r\n                align='center'\r\n                fill={WHITE}\r\n                fontSize={radius * 0.34}\r\n                fontFamily='Times New Roman' />\r\n            { TierDiamonds(tier, 0, tierDiamondY, diamondRadius) }\r\n        </ Group>\r\n    );\r\n};\r\n\r\nexport default CampaignNode;\r\n","import React from 'react';\r\n\r\nimport CampaignNode from '../campaign-node';\r\n\r\nconst PrologueTier = props => {\r\n    const {\r\n        x,\r\n        y,\r\n        radius,\r\n        nodes,\r\n        dispatch\r\n    } = props;\r\n    \r\n    return nodes.map(({ name, id, summary, tier }, i) => <CampaignNode key={id} id={id} x={x + 0} y={(y + radius * 1.28) * 2 * i + radius} radius={radius} tier={tier + 1} name={name} dispatch={dispatch} />);\r\n};\r\n\r\nexport default PrologueTier;","import React from 'react';\r\nimport { Group } from 'react-konva';\r\nimport sortBy from 'lodash/sortBy'; \r\n\r\nimport CampaignNode from './../campaign-node';\r\n\r\nconst nodePlotter = (min, max, radius, node, dispatch, i, arr) => {\r\n    const scalar = arr.length > 1 ? (i + 1) / (arr.length + 1) : 0.5;\r\n    \r\n    const xMin = Math.min(min[0], max[0]);\r\n    const xMax = Math.max(min[0], max[0]);\r\n    const yMin = Math.min(min[1], min[1]);\r\n    const yMax = Math.min(max[1], min[1]);\r\n\r\n    const xRange = xMax - xMin;\r\n    const yRange = yMax - yMin;\r\n    \r\n    const xPosition = xRange * scalar + xMin;\r\n    const yPosition = yRange * scalar + yMin;\r\n\r\n    return (<CampaignNode key={node.id} id={node.id} x={xPosition} y={yPosition} node={node.tier} name={node.name} radius={radius} tier={node.tier + 1} dispatch={dispatch} />);\r\n};\r\n\r\nconst VLayer = props => {\r\n    const {\r\n        x, y,\r\n        tier,\r\n        radius,\r\n        nodes,\r\n        width,\r\n        height,\r\n        dispatch\r\n    } = props;\r\n    const allNodes = sortBy(nodes, ['alliance', 'order']);\r\n    const halfWidth = width/2;\r\n    const guardianBottom = [x + -halfWidth, y + height/2];\r\n    const corruptorBottom = [x + halfWidth, y + height/2];\r\n\r\n    return (allNodes.map((node, i, arr) => nodePlotter(corruptorBottom, guardianBottom, radius, node, dispatch, i, arr)));\r\n};\r\n\r\nexport default VLayer;\r\n","import get from 'lodash/get';\r\n\r\nexport const playerListSelector = state => state.playerData.all;\r\n\r\nexport const selectedPlayerNameSelector = state => state.playerData.selected;\r\n\r\nexport const selectedPlayerSelector = state => {\r\n    const players = playerListSelector(state);\r\n    const selectedName = selectedPlayerNameSelector(state);\r\n    const player = get(players.filter(playerCard => playerCard.name === selectedName), [0], null);\r\n    \r\n    return player;\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\n\r\nimport { campaignTree, campaignScenarioMap, ALLIANCES } from '../../../data/oblivion';\r\nimport { Line } from 'react-konva';\r\nimport { WHITE, GUARDIAN_GOLD, INFERNAL_RED, BLACK } from '../../../constants/colors';\r\nimport { selectedPlayerSelector } from '../../../selectors';\r\n\r\nconst winLossString = didWin => didWin === 1 ? 'win' : 'loss';\r\n\r\nconst getNextNode = (node, outcomeString, alliance) => {\r\n    const nextScenarioIds = get(node, [outcomeString]);\r\n    const nextScenario = nextScenarioIds.reduce((acc, id) => {\r\n       const scenario = campaignScenarioMap[id];\r\n       \r\n       if(scenario.alliance === alliance || scenario.alliance === ALLIANCES.BOTH) {\r\n           return scenario;\r\n       }\r\n       \r\n       return acc;\r\n    }, null);\r\n    \r\n    return nextScenario;\r\n};\r\n\r\n// A recursive function that returns an array of scenarios in order of completion;\r\nconst getScenarioPath = (outcomes, alliance, currentScenario, currentIndex) => {\r\n    const outcomeString = winLossString(outcomes[currentIndex]);\r\n    const nextIndex = currentIndex + 1;\r\n\r\n    // If there are no more outcomes then the player may not have played this far.\r\n    if(currentIndex >= outcomes.length) { return null; }\r\n    \r\n    const nextScenario = getNextNode(currentScenario, outcomeString, alliance);\r\n    \r\n    if(nextScenario === null) {\r\n        return null;    \r\n    }\r\n    \r\n    const futureScenarios = getScenarioPath(outcomes, alliance, nextScenario, nextIndex);\r\n    \r\n    // There were deeper scenarios than nextScenario\r\n    if(futureScenarios !== null) {\r\n        return [nextScenario, ...futureScenarios];\r\n    }\r\n    \r\n    // Next scenario is the last completed scenario\r\n    return [nextScenario];\r\n};\r\n\r\nconst CampaignPath = props => {\r\n    const { \r\n        nodePositionsMap,\r\n        player\r\n    } = props;\r\n    const {\r\n        alliance,\r\n        outcomes\r\n    } = player;\r\n    \r\n    const pathColor = alliance === ALLIANCES.GUARDIAN ? GUARDIAN_GOLD : INFERNAL_RED;\r\n    const initialScenario = campaignTree[0].filter(({ id }) => id === 0)[0];\r\n    const partialScenarioPath = getScenarioPath(outcomes, alliance, initialScenario, 0);\r\n\r\n    if(partialScenarioPath === null) { return <></>; }\r\n    \r\n    const scenarioPath = [initialScenario, ...partialScenarioPath];\r\n    \r\n    const linePath = scenarioPath.reduce((acc, scenario) => {\r\n        const positions = get(nodePositionsMap, [scenario.id], null);\r\n        \r\n        if(!positions) { return acc; }\r\n\r\n        const { x, y } = positions;\r\n        acc.push(x);\r\n        acc.push(y);\r\n        \r\n        return acc;\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            <Line points={linePath} stroke={BLACK} strokeWidth={8} />\r\n            <Line points={linePath} stroke={pathColor} strokeWidth={2} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CampaignPath;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Stage, Layer } from 'react-konva';\r\n\r\nimport { campaignTree } from '../../data/oblivion';\r\nimport { BORDER_OFFSET } from '../../constants/sizes';\r\nimport CampaignTreeBackground from './campaign-tree-background';\r\nimport PrologueTier from './campaign-layers/prologue-tier';\r\nimport VLayer from './campaign-layers/v-layer';\r\nimport CampaignPath from './campaign-path';\r\nimport { selectedPlayerSelector, playerListSelector } from '../../selectors';\r\n\r\nconst aspectRatio = 1.223;\r\n\r\nconst calculateSize = (setWidth, setHeight, setNodeRadius, container) => {\r\n    if(container.current) {\r\n        const w = container.current.clientWidth;\r\n        setWidth(w);\r\n        setHeight(w * aspectRatio);\r\n        setNodeRadius(w/25);\r\n    }\r\n};\r\n\r\nconst OblivionTracker = props => {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        container\r\n    } = props;\r\n    const nodePositions = useSelector(state => state.nodeProperties.positions);\r\n    const selectedPlayer = useSelector(selectedPlayerSelector);\r\n    \r\n    const [width, setWidth] = useState(0);\r\n    const [height, setHeight] = useState(0);\r\n    const [nodeRadius, setNodeRadius] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        const calculateSizeDI = () => calculateSize(setWidth, setHeight, setNodeRadius, container)\r\n        window.addEventListener('resize', calculateSizeDI);\r\n        \r\n        calculateSizeDI();\r\n        \r\n        return () => window.removeEventListener('resize', calculateSizeDI);\r\n    }, []);\r\n    \r\n    const tierHeight = height / 5;\r\n\r\n    const prologueNodes = campaignTree[0];\r\n    const tier2Through5 = campaignTree.slice(1, 5);;\r\n    \r\n    if(!container.current) {\r\n        return (<></>);\r\n    }\r\n    \r\n    return (\r\n        <Stage width={width} height={height + BORDER_OFFSET * 2}>\r\n            <CampaignTreeBackground width={width} height={height}/>\r\n            <Layer>\r\n                { selectedPlayer && <CampaignPath player={selectedPlayer} nodePositionsMap={nodePositions} /> }\r\n            </Layer>\r\n            <Layer>\r\n                <PrologueTier nodes={prologueNodes} x={width/2} y={0} radius={nodeRadius} dispatch={dispatch} />\r\n                {tier2Through5.map((nodes, i) => <VLayer key={`tier_${i}`} nodes={nodes} x={width/2} y={tierHeight * (i + 1)} radius={nodeRadius} width={width} height={tierHeight} dispatch={dispatch} />)}\r\n            </Layer>\r\n        </Stage> \r\n    );\r\n};\r\n\r\nexport default OblivionTracker;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport get from 'lodash/get';\r\n\r\nimport { selectedPlayerSelector, selectedPlayerNameSelector } from '../../selectors';\r\nimport { setSelectedPlayer } from '../../action-creators';\r\n\r\nimport './index.css';\r\n\r\nconst getOptions = players => players.map(player => ({ value: player, label: player.name }));\r\n\r\nconst PlayerChooser = props => {\r\n    const {\r\n      players,\r\n      selected\r\n    } = props;\r\n    \r\n    const dispatch = useDispatch();\r\n    const selectedPlayer = useSelector(selectedPlayerSelector);\r\n    const selectedPlayerName = useSelector(selectedPlayerNameSelector);\r\n    \r\n    const options = getOptions(players);\r\n    const changePlayerHandler = (newSelection => {\r\n        dispatch(setSelectedPlayer(newSelection.label))\r\n    });\r\n    \r\n    const selectedOption = get(options.filter(option => option.label === selectedPlayerName), [0], null);\r\n\r\n    return (\r\n      <div className='player-selector'>\r\n        <Select options={options} onChange={changePlayerHandler} value={selectedOption} />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default PlayerChooser;\r\n","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nconst OmenDraws = props => {\r\n    const { count } = props;\r\n    \r\n    return (\r\n      <div className='omen-draw'>\r\n          <div className='omen-draw__label'>Omen Draws</div>\r\n          <div className='omen-draw__count'>{ count }</div>\r\n          \r\n      </div>  \r\n    );\r\n};\r\n\r\nexport default OmenDraws;\r\n","import { PLAYER_DATA_URL } from '../constants';\r\nimport { ALLIANCES } from '../data/oblivion';\r\nimport { parse } from '@babel/parser';\r\n\r\nconst INDEXES = {\r\n    name: 0,\r\n    omen: 1,\r\n};\r\n\r\nconst fetchPlayerData = async (url) => {\r\n    const decoder = new TextDecoder('utf8');\r\n    const response = await fetch(url);\r\n    \r\n    if(!response.ok) {\r\n        return null;\r\n    }\r\n    \r\n    const reader = response.body.getReader();\r\n    const buffer = await reader.read();\r\n    const data = decoder.decode(buffer.value)\r\n    \r\n    return data;\r\n};\r\n\r\nconst decodePlayer = line => {\r\n    const splitLine = line.split(',');\r\n    const [name, allianceString, omen] = splitLine.slice(0, 3);\r\n    const rawOutcomes = splitLine.slice(2, splitLine.length - 1);\r\n    const outcomes = rawOutcomes.map( val => {\r\n        if(val === \"0\") { return 0; }\r\n        if(val === \"1\") { return 1; }\r\n        return null; \r\n    }).filter(val => val !== null);\r\n    \r\n    return {\r\n        name,\r\n        alliance: allianceString === ALLIANCES.GUARDIAN ? ALLIANCES.GUARDIAN : ALLIANCES.CORRUPTOR,\r\n        cards: parseFloat(omen),\r\n        outcomes\r\n    };\r\n};\r\n\r\nexport const getPlayerData = () => new Promise(async (resolve, reject) => {\r\n    const playerData = await fetchPlayerData(PLAYER_DATA_URL);\r\n    \r\n    if(playerData === null) { resolve([]); }\r\n    \r\n    const lines = playerData.split('\\n').slice(1);\r\n    const players = lines.map(decodePlayer);\r\n    console.log(players);\r\n    resolve(players);\r\n});\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\n\r\nimport './index.css';\r\nimport OblivionTracker from '../oblivion-tracker';\r\nimport PlayerChooser from '../player-chooser';\r\nimport OmenDraws from '../omen-draws';\r\nimport { setPlayers } from '../../action-creators';\r\nimport { getPlayerData } from '../../fetchers/player-data';\r\nimport { playerListSelector, selectedPlayerNameSelector, selectedPlayerSelector } from '../../selectors';\r\n\r\nconst TrackerContainer = props => {\r\n    const dispatch = useDispatch();\r\n    const containerRef = useRef(null);\r\n    const players = useSelector(playerListSelector);\r\n    const selectedPlayerName = useSelector(selectedPlayerNameSelector);\r\n    const selectedPlayer = useSelector(selectedPlayerSelector);\r\n    const draws = get(selectedPlayer, ['cards'], 0);\r\n\r\n    useEffect(() => {\r\n        new Promise(async (resolve, reject) => {\r\n            const players = await getPlayerData();\r\n            dispatch(setPlayers(players));\r\n            resolve();\r\n        });\r\n        \r\n    }, []);\r\n    \r\n    return (\r\n        <div className='tracker-container'>\r\n            <div className='player-selection-container'>\r\n                <div>\r\n                    { players && <PlayerChooser players={players} selected={selectedPlayerName} /> }\r\n                </div>\r\n                <div>\r\n                    { selectedPlayer && <OmenDraws count={draws} /> }\r\n                </div>\r\n            </div>\r\n            <div className='tracker-container__campaign' ref={containerRef}>\r\n                <OblivionTracker container={containerRef} />\r\n            </div>\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default TrackerContainer;","export const PLAYER_DATA_URL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQtcua0U23LP0GMcFjvc6bF-0Y7paHNG8LWO4AqcMXkN0wH-rlnvQ5xtAo_GV_yGBdSMOAWYDXJK0BF/pub?output=csv';","import React, { useRef } from 'react';\n\nimport TrackerContainer from './components/tracker-container';\n\nimport './App.css';\n\nconst App = props => {\n  const container = useRef();\n  \n  \n  return (\n      <div className=\"App\" ref={container}>\n        <header className=\"App-header\"></header>\n        <TrackerContainer />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import assign from 'lodash/assign';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport { \r\n    SET_NODE_POSITION_ACTION_TYPE,\r\n    SET_SELECTED_PLAYER,\r\n    SET_PLAYERS\r\n} from '../action-creators';\r\n\r\nconst defaultState = {\r\n    nodeProperties: {\r\n        positions: {},\r\n    },\r\n    playerData: {\r\n        selected: null,\r\n        all: []\r\n    }\r\n};\r\n\r\nconst setNodePositionReducer = (state, action) => {\r\n    const node = { x: action.x, y: action.y, id: action.id };\r\n    const { positions: oldNodePositions } = state;\r\n    const positions = assign({}, oldNodePositions, { [action.id]: node });\r\n    \r\n    return assign({}, state, { positions });\r\n};\r\n\r\nconst nodeProperties = (state = defaultState.nodeProperties, action) => {\r\n    switch(action.type) {\r\n        case SET_NODE_POSITION_ACTION_TYPE:\r\n            return setNodePositionReducer(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setPlayersReducer = (state, { players }) => assign({}, state, { all: players });\r\n    \r\nconst setPlayerReducer = (state, { player }) => assign({}, state, { selected: player });\r\n\r\nconst playerData = (state = defaultState.playerData, action) => {\r\n    switch(action.type) {\r\n        case SET_SELECTED_PLAYER:\r\n            return setPlayerReducer(state, action);\r\n        case SET_PLAYERS:\r\n            return setPlayersReducer(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n    nodeProperties,\r\n    playerData\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport oblivionStore from './store';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <Provider store={oblivionStore}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}